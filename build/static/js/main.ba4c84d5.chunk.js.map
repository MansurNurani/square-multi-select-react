{"version":3,"sources":["Compoents/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","state","selectedIds","arrayRemove","arr","value","filter","a","handleClick","e","id","parseInt","target","dataset","includes","res","setState","style1","backgroundColor","console","log","this","map","data-id","className","style","onClick","Component","App","position","left","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEqBA,E,4MACjBC,MAAQ,CAAEC,YAAa,I,EACvBC,YAAc,SAACC,EAAKC,GAAN,OAAgBD,EAAIE,QAAO,SAAAC,GAAC,OAAIA,IAAMF,M,EACpDG,YAAc,SAACC,GACX,IAAIC,EAAKC,SAASF,EAAEG,OAAOC,QAAQH,IACnC,GAAI,EAAKT,MAAMC,YAAYY,SAASJ,GAAK,CACrC,IAAIK,EAAM,EAAKZ,YAAY,EAAKF,MAAMC,YAAaQ,GACnD,EAAKM,SAAS,CAAEd,YAAaa,QAE5B,CACD,IAAIA,EAAG,sBAAO,EAAKd,MAAMC,aAAlB,CAA+BQ,IACtC,EAAKM,SAAS,CAAEd,YAAaa,M,4CAGrC,WAAU,IAAD,OACDE,EAAS,CAAEC,gBAAiB,SAEhC,OADAC,QAAQC,IAAI,cAAgBC,KAAKpB,MAAMC,aAEnC,8BACI,qBAAKQ,GAAG,iBAAR,SACK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGY,KAAI,SAAAf,GAAC,OAC9B,qBAAKgB,UAAShB,EAAGiB,UAAU,UAAUC,MAAO,EAAKxB,MAAMC,YAAYY,SAASP,GAAKU,EAAS,KAAMS,QAAS,EAAKlB,yB,GArBpGmB,aCcnBC,MAbf,WACE,OACE,sBAAKH,MAAO,CACVI,SAAU,WAAYC,KAAM,MAC5BC,UAAW,oBAFb,UAIE,uBACA,uBACA,cAAC,EAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ba4c84d5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"./file.css\"\r\nexport default class Todo extends Component {\r\n    state = { selectedIds: [] }\r\n    arrayRemove = (arr, value) => arr.filter(a => a !== value);\r\n    handleClick = (e) => {\r\n        let id = parseInt(e.target.dataset.id);\r\n        if (this.state.selectedIds.includes(id)) {\r\n            let res = this.arrayRemove(this.state.selectedIds, id);\r\n            this.setState({ selectedIds: res });\r\n        }\r\n        else {\r\n            let res = [...this.state.selectedIds, id];\r\n            this.setState({ selectedIds: res });\r\n        }\r\n    }\r\n    render() {\r\n        let style1 = { backgroundColor: \"green\" };\r\n        console.log(\"in render: \" + this.state.selectedIds);\r\n        return (\r\n            <div>\r\n                <div id=\"flexContainer1\">\r\n                    {[0, 1, 2, 3, 4, 5, 6, 7, 8].map(a => (\r\n                        <div data-id={a} className=\"MyClass\" style={this.state.selectedIds.includes(a) ? style1 : null} onClick={this.handleClick}></div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport Todo from './Compoents/Todo';\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{\r\n      position: 'absolute', left: '50%',\r\n      transform: 'translateX(-50%)'\r\n    }}>\r\n      <br />\r\n      <br />\r\n      <Todo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}